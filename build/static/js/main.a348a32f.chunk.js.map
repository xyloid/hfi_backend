{"version":3,"sources":["services/record.js","services/login.js","components/LoginForm.js","reducers/recordReducer.js","components/RecordTable.js","App.js","index.js"],"names":["baseUrl","token","getAll","a","config","headers","Authorization","axios","get","response","data","setToken","newToken","fetchById","id","login","credentials","post","LoginForm","handleSubmit","useState","username","setUsername","password","setPassword","Form","onSubmit","event","preventDefault","console","log","style","width","Group","Label","Control","type","name","value","onChange","target","Button","variant","initializeRecords","records","recordReducer","state","action","ret","map","record","sort","x","y","timestamp","RecordTable","dispatch","useDispatch","useSelector","expandRow","renderer","row","statusHistory","backgroundColor","keyField","columns","dataField","text","onExpand","isExpand","rowIndex","e","recordService","res","App","user","setUser","useEffect","loggedUserJSON","window","localStorage","getItem","JSON","parse","then","loginHandler","loginService","setItem","stringify","className","Navbar","collapseOnSelect","expand","bg","Toggle","aria-controls","Collapse","Nav","Link","href","as","padding","to","size","onClick","removeItem","path","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a348a32f.chunk.js","sourcesContent":["import axios from \"axios\";\nconst baseUrl = \"http://localhost:3001/api/data\";\n\nlet token = null;\nconst setToken = (newToken) => {\n  token = `bearer ${newToken}`;\n};\n\nconst getAll = async () => {\n  const config = { headers: { Authorization: token } };\n\n  const response = await axios.get(baseUrl, config);\n  return response.data;\n};\n\nconst fetchById = async (id) => {\n  const config = { headers: { Authorization: token } };\n\n  const response = await axios.get(baseUrl + \"/\" + id, config);\n  return response.data;\n};\n\nexport default { getAll, setToken, fetchById };\n","import axios from \"axios\";\nconst baseUrl = \"http://localhost:3001/api/login\";\n\nconst login = async (credentials) => {\n  const response = await axios.post(baseUrl, credentials);\n  return response.data;\n};\n\nexport default { login };","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Button, Form } from \"react-bootstrap\";\n\nconst LoginForm = ({ handleSubmit }) => {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const login = (event) => {\n    event.preventDefault();\n    console.log(username, password);\n    handleSubmit(username, password);\n    setUsername(\"\");\n    setPassword(\"\");\n    // history.push(\"/\");\n  };\n\n  return (\n    <div>\n      <h2>Login</h2>\n\n      <Form onSubmit={login} style={{ width: \"200px\" }}>\n        <Form.Group>\n          <Form.Label>username:</Form.Label>\n          <Form.Control\n            type=\"text\"\n            name=\"username\"\n            value={username}\n            onChange={({ target }) => setUsername(target.value)}\n          />\n          <Form.Label>password:</Form.Label>\n          <Form.Control\n            type=\"password\"\n            value={password}\n            onChange={({ target }) => setPassword(target.value)}\n          />\n          <Button variant=\"primary\" type=\"submit\">\n            login\n          </Button>\n        </Form.Group>\n      </Form>\n    </div>\n  );\n};\n\nLoginForm.propTypes = {\n  handleSubmit: PropTypes.func.isRequired,\n};\n\nexport default LoginForm;\n","import recordService from \"../services/record\";\n\nconst recordReducer = (state = [], action) => {\n  switch (action.type) {\n    case \"GET_BY_ID\":\n      console.log(\"get by id\");\n      const ret = state.map((record) => {\n        if (record.id === action.data.id) {\n          return action.data;\n        } else {\n          return record;\n        }\n      });\n\n      return ret.sort(function (x, y) {\n        return x.timestamp - y.timestamp;\n      });\n    case \"INIT_RECORDS\":\n      return action.data;\n    default:\n      return state;\n  }\n};\n\nexport const fetchSingleRecord = (id) => {\n  return async (dispatch) => {\n    const res = await recordService.fetchById(id);\n    return dispatch({\n      type: \"GET_BY_ID\",\n      data: res,\n    });\n  };\n};\n\nexport const initializeRecords = (records) => {\n  return {\n    type: \"INIT_RECORDS\",\n    data: records,\n  };\n};\n\nexport default recordReducer;\n","import React from \"react\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport { fetchSingleRecord } from \"../reducers/recordReducer\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nconst RecordTable = () => {\n  const dispatch = useDispatch();\n  const records = useSelector((state) => state);\n\n    // for expandable table\n    const columns = [\n        {\n          dataField: \"id\",\n          text: \"ID\",\n        },\n        {\n          dataField: \"name\",\n          text: \"Name\",\n        },\n        {\n          dataField: \"gender\",\n          text: \"Gender\",\n        },\n        {\n          dataField: \"age\",\n          text: \"Age\",\n        },\n        {\n          dataField: \"caseStatus\",\n          text: \"Case Status\",\n        },\n        {\n          dataField: \"plan\",\n          text: \"Plan\",\n        },\n      ];\n    \n      const expandRow = {\n        renderer: (row) => {\n          if (typeof row.statusHistory !== \"undefined\") {\n          }\n    \n          const cols = [\n            {\n              dataField: \"statusCode\",\n              text: \"Status\",\n            },\n            {\n              dataField: \"timestamp\",\n              text: \"Time\",\n            },\n          ];\n    \n          return (\n            <div>\n              {typeof row.statusHistory === \"undefined\" ? (\n                <div></div>\n              ) : (\n                <div style={{backgroundColor:'#e7e8e1'}}>  \n                  <BootstrapTable\n                    keyField=\"_id\"\n                    data={row.statusHistory}\n                    columns={cols}\n                  ></BootstrapTable>\n                </div>\n              )}\n            </div>\n          );\n        },\n        onExpand: (row, isExpand, rowIndex, e) => {\n          if (isExpand) {\n            if (typeof row.statusHistory === \"undefined\") {\n              dispatch(fetchSingleRecord(row.id));\n            }\n          }\n        },\n      };\n    \n\n  return (\n    <div style={{backgroundColor:'#e6f1f5'}}>\n      <BootstrapTable \n        keyField=\"id\"\n        data={records}\n        columns={columns}\n        expandRow={expandRow}\n      ></BootstrapTable>\n    </div>\n  );\n};\n\nexport default RecordTable;\n","import React, { useState, useEffect } from \"react\";\n\nimport recordService from \"./services/record\";\nimport loginService from \"./services/login\";\nimport LoginForm from \"./components/LoginForm\";\nimport RecordTable from \"./components/RecordTable\";\nimport { Button, Navbar, Nav } from \"react-bootstrap\";\n\nimport { initializeRecords } from \"./reducers/recordReducer\";\nimport { useDispatch } from \"react-redux\";\n\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\n\nconst App = () => {\n  const dispatch = useDispatch();\n\n  const [user, setUser] = useState(null);\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem(\"loggedUser\");\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON);\n      setUser(user);\n      recordService.setToken(user.token);\n      recordService.getAll().then((res) => dispatch(initializeRecords(res)));\n    }\n  }, [dispatch]);\n\n  const loginHandler = async (username, password) => {\n    try {\n      const user = await loginService.login({ username, password });\n      console.log(user);\n      setUser(user);\n      window.localStorage.setItem(\"loggedUser\", JSON.stringify(user));\n      recordService.setToken(user.token);\n      recordService.getAll().then((res) => dispatch(initializeRecords(res)));\n    } catch (exception) {\n      console.log(exception);\n    }\n  };\n\n  // handle logout\n  const logoutHandler = () => {\n    window.localStorage.removeItem(\"loggedUser\");\n    setUser(null);\n  };\n\n  const padding = {\n    padding: 5,\n  };\n\n  return (\n    <div className=\"container\"> \n      <Router>\n        <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\n          <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n          <Navbar.Collapse id=\"responsive-navbar-nav\">\n            <Nav className=\"mr-auto\">\n              <Nav.Link href=\"#\" as=\"span\">\n                <Link style={padding} to=\"/\">\n                  home\n                </Link>\n              </Nav.Link>\n              <Nav.Link href=\"#\" as=\"span\">\n                {user ? (\n                  <em>\n                    {user.name} logged in\n                    <Button variant=\"outline-primary\" size=\"sm\" onClick={logoutHandler}>\n                      logout\n                    </Button>\n                  </em>\n                ) : (\n                  <Link to=\"/login\">login</Link>\n                )}\n              </Nav.Link>\n            </Nav>\n          </Navbar.Collapse>\n        </Navbar>\n\n        <Switch>\n          <Route path=\"/login\">\n            <div>\n              {user === null ? (\n                <LoginForm handleSubmit={loginHandler} />\n              ) : (\n                <div>\n                  <p>\n                    <b>{user.name}</b> logged-in{\" \"}\n                  </p>\n                </div>\n              )}\n            </div>\n          </Route>\n          <Route path=\"/\">\n            {user === null ? (\n              <div>Please login to view the data</div>\n            ) : (\n              <RecordTable />\n            )}\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport App from \"./App\";\nimport \"./index.css\";\nimport recordReducer from \"./reducers/recordReducer\";\n\nimport thunk from \"redux-thunk\";\n// import { composeWithDevTools } from \"redux-devtools-extension\";\n\nconst store = createStore(recordReducer, applyMiddleware(thunk));\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}